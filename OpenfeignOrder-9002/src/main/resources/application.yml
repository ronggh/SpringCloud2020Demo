server:
  port: 9002
spring:
  application:
    name: OpenfeignOrder
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:7001/eureka



# openfeign已集成 Ribbon
# 设置openfeign的超时时间（默认为1秒钟），单位为毫秒
#ribbon:
#  readTimeout: 5000
#  connectTimeout: 5000

# 使用Feign自己的配置
feign:
  client:
    config:
      ## 自定义的 FeginClient的名称
      OpenfeignOrder:
        #连接超时
        connectTimeout: 5000
        readTimeout: 5000
        # 配置Feign的日志级别，相当于代码配置方式中的Logger
        loggerLevel: FULL
        # Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
#        errorDecoder: com.example.SimpleErrorDecoder
        # 配置重试，相当于代码配置方式中的Retryer
#        retryer: com.example.SimpleRetryer
        # 配置拦截器，相当于代码配置方式中的RequestInterceptor
#        requestInterceptors:
#          - com.example.FooRequestInterceptor
#          - com.example.BarRequestInterceptor
        decode404: false
  # 压缩
  compression:
    request:
      enabled: true # 开启请求压缩
      mime-types: text/html,application/xml,application/json # 设置压缩的数据类型
      min-request-size: 2048 # 设置触发压缩的大小下限
    response:
      enabled: true # 开启响应压缩

# Feign的日志以什么级别，监控哪个接口
logging:
  level:
    cn.alan.service.IPaymentService: debug